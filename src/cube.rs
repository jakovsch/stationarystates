
static VERT: [[f32; 3]; 8] = [
    [-1., -1., -1.],
    [ 1., -1., -1.],
    [ 1.,  1., -1.],
    [-1.,  1., -1.],
    [-1., -1.,  1.],
    [ 1., -1.,  1.],
    [ 1.,  1.,  1.],
    [-1.,  1.,  1.],
];
static IND: [usize; 36] = [
    0, 1, 3, 3, 1, 2,
    1, 5, 2, 2, 5, 6,
    5, 4, 6, 6, 4, 7,
    4, 0, 7, 7, 0, 3,
    3, 2, 7, 7, 2, 6,
    4, 5, 0, 0, 5, 1,
];

pub struct Cube {
    pub arr: [f32; 18*6],
}

impl Cube {
    pub fn new() -> Self {
        let mut arr: [f32; 18*6] = [0.0; 18*6];
        for i in 0..36 {
            arr[3*i] = VERT[IND[i]][0];
            arr[3*i+1] = VERT[IND[i]][1];
            arr[3*i+2] = VERT[IND[i]][2];
        }

        Self {arr}
    }
}
